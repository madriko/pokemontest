{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\React\\\\pokemon2\\\\client\\\\src\\\\containers\\\\PokemonList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport _ from 'lodash';\nimport { GetPokemonList } from '../actions/pokemonActions';\nimport { Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\nimport Axios from 'axios';\n\nconst PokemonList = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const pokemonList = useSelector(state => state.PokemonList);\n  const pokemonName = props.match.params.pokemon;\n  const pokemonState = useSelector(state => state.Pokemon);\n  const [pokemonQty, setPokemonQty] = useState([]);\n  useEffect(() => {\n    FetchData(1);\n  }, []);\n\n  const FetchData = (page = 1) => {\n    dispatch(GetPokemonList(page));\n  };\n\n  const getPokemonQty = pokemon => {\n    Axios.get(`http://localhost:3001/api/get/${pokemon}`).then(response => {\n      setPokemonQty(response.data);\n      console.log(response.data);\n    }).then(() => {\n      return pokemonList.map(val => {\n        if (val.name === pokemonName) {\n          return val.qty - 1;\n        }\n      });\n    });\n  }; // const ShowDataQty = () => {\n  //     return (\n  //         pokemonList.map((val) => {\n  //             if (val.name === pokemonName) {\n  //                 return val.qty + 1\n  //             }\n  //         })\n  //     )\n  // }\n\n\n  const ShowData = () => {\n    if (pokemonList.loading) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (!_.isEmpty(pokemonList.data)) {\n      return pokemonList.data.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/pokemon/${el.name}`,\n                  children: el.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 36\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this);\n      });\n    }\n\n    if (pokemonList.errorMsg !== \"\") {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: pokemonList.errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"unable to get data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [ShowData(), !_.isEmpty(pokemonList.data) && /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      pageCount: Math.ceil(pokemonList.count / 10),\n      pageRangeDisplayed: 2,\n      marginPagesDisplayed: 1,\n      onPageChange: data => FetchData(data.selected + 1),\n      containerClassName: \"container pagination\",\n      pageClassName: \"btn btn-sm btn-primary\",\n      previousClassName: \"btn btn-sm btn-primary\",\n      nextClassName: \"btn btn-sm btn-primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PokemonList, \"pjUCJdYAR95HpJ5/qpZVd3ZSjCg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PokemonList;\nexport default PokemonList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonList\");","map":{"version":3,"sources":["D:/React/pokemon2/client/src/containers/PokemonList.js"],"names":["React","useState","useEffect","useDispatch","useSelector","_","GetPokemonList","Link","ReactPaginate","Axios","PokemonList","props","dispatch","pokemonList","state","pokemonName","match","params","pokemon","pokemonState","Pokemon","pokemonQty","setPokemonQty","FetchData","page","getPokemonQty","get","then","response","data","console","log","map","val","name","qty","ShowData","loading","isEmpty","el","errorMsg","Math","ceil","count","selected"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport _ from 'lodash'\r\nimport { GetPokemonList } from '../actions/pokemonActions'\r\nimport {Link} from 'react-router-dom'\r\nimport ReactPaginate from 'react-paginate'\r\nimport Axios from 'axios'\r\n\r\nconst PokemonList = (props) => {\r\n    const dispatch = useDispatch()\r\n    const pokemonList = useSelector(state => state.PokemonList)\r\n    const pokemonName = props.match.params.pokemon\r\n    const pokemonState = useSelector(state => state.Pokemon)\r\n    const [pokemonQty, setPokemonQty] = useState([])\r\n\r\n    useEffect(() => {\r\n        FetchData(1)\r\n    }, [])\r\n\r\n    const FetchData = (page = 1) => {\r\n        dispatch(GetPokemonList(page))\r\n    }\r\n\r\n    const getPokemonQty = (pokemon) => {\r\n        Axios.get(`http://localhost:3001/api/get/${pokemon}`).then((response) => {\r\n            setPokemonQty(response.data)\r\n            console.log(response.data)\r\n        }).then(() => {\r\n            return (\r\n                pokemonList.map((val) => {\r\n                    if (val.name === pokemonName) {\r\n                        return val.qty - 1\r\n                    }\r\n                })\r\n            )\r\n        })\r\n    }\r\n\r\n    // const ShowDataQty = () => {\r\n    //     return (\r\n    //         pokemonList.map((val) => {\r\n    //             if (val.name === pokemonName) {\r\n    //                 return val.qty + 1\r\n    //             }\r\n    //         })\r\n    //     )\r\n    // }\r\n\r\n    const ShowData = () => {\r\n        if (pokemonList.loading) {\r\n            return <h1 className=\"loading\">Loading...</h1>\r\n        }\r\n\r\n        if (!_.isEmpty(pokemonList.data)) {\r\n            return pokemonList.data.map(el => {\r\n                return (\r\n                    <div className=\"container\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <p><Link to={`/pokemon/${el.name}`}>{el.name}</Link></p>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                )\r\n            })   \r\n        }\r\n\r\n        if (pokemonList.errorMsg !== \"\") {\r\n            return <p>{pokemonList.errorMsg}</p>\r\n        }\r\n\r\n        return <p>unable to get data</p>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {ShowData()}\r\n            {!_.isEmpty(pokemonList.data) && (\r\n                <ReactPaginate \r\n                    pageCount={Math.ceil(pokemonList.count / 10)}\r\n                    pageRangeDisplayed={2}\r\n                    marginPagesDisplayed={1}\r\n                    onPageChange={(data) => FetchData(data.selected + 1)}\r\n                    containerClassName={\"container pagination\"}\r\n                    pageClassName={\"btn btn-sm btn-primary\"}\r\n                    previousClassName={\"btn btn-sm btn-primary\"}\r\n                    nextClassName={\"btn btn-sm btn-primary\"}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonList"]},"metadata":{},"sourceType":"module"}