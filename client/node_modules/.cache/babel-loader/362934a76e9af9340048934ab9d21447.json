{"ast":null,"code":"import _slicedToArray from\"D:/React/pokemon2/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState}from'react';import{useForm}from'react-hook-form';import{useDispatch,useSelector}from'react-redux';import{GetPokemon}from'../actions/pokemonActions';import Modal from'./Modal';import _ from'lodash';import Axios from'axios';var Pokemon=function Pokemon(props){var pokemonName=props.match.params.pokemon;var dispatch=useDispatch();var pokemonState=useSelector(function(state){return state.Pokemon;});var _useState=useState([]),_useState2=_slicedToArray(_useState,2),pokemonList=_useState2[0],setPokemonList=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isOpen=_useState4[0],setIsOpen=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isOpen2=_useState6[0],setIsOpen2=_useState6[1];var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit;var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),count=_useState8[0],setCount=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),nicknameStatus=_useState10[0],setNicknameStatus=_useState10[1];React.useEffect(function(){dispatch(GetPokemon(pokemonName));},[]);var ShowData=function ShowData(){if(!_.isEmpty(pokemonState.data[pokemonName])){var pokeData=pokemonState.data[pokemonName];return/*#__PURE__*/_jsxs(\"div\",{className:\"pokemon\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"img\",children:[/*#__PURE__*/_jsx(\"img\",{src:pokeData.sprites.front_default,alt:\"\"}),/*#__PURE__*/_jsx(\"img\",{src:pokeData.sprites.back_default,alt:\"\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pokemonWrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Types\"}),pokeData.types.map(function(el){return/*#__PURE__*/_jsx(\"p\",{children:el.type.name});})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Abilities\"}),pokeData.abilities.map(function(el){return/*#__PURE__*/_jsx(\"p\",{children:el.ability.name});})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pokemonWrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Stats\"}),pokeData.stats.map(function(el){return/*#__PURE__*/_jsxs(\"p\",{children:[el.stat.name,\" : \",el.base_stat]});})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Held Items\"}),pokeData.held_items.map(function(el){return/*#__PURE__*/_jsx(\"p\",{children:el.item.name});})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pokemonWrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Moves\"}),pokeData.moves.map(function(el){return/*#__PURE__*/_jsx(\"p\",{children:el.move.name});})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Game Indices\"}),pokeData.game_indices.map(function(el){return/*#__PURE__*/_jsxs(\"p\",{children:[el.version.name,\" : \",el.game_index]});})]})]})]});}if(pokemonState.loading){return/*#__PURE__*/_jsx(\"h1\",{className:\"loading\",children:\"Loading...\"});}if(pokemonState.errorMsg!==\"\"){return/*#__PURE__*/_jsx(\"p\",{children:pokemonState.errorMsg});}return/*#__PURE__*/_jsx(\"p\",{children:\"error getting pokemon\"});};var onSubmit=function onSubmit(data){Axios.post(\"http://localhost:3001/api/insert\",{nickname:data.nickname,id_pokemon:data.id_pokemon,name:data.name,qty:data.qty}).then(function(response){if(response.data.message){setNicknameStatus(response.data.message);}});};var addPokemonQty=function addPokemonQty(pokemon){Axios.get(\"http://localhost:3001/api/get/\".concat(pokemon)).then(function(response){setPokemonList(response.data);});};var ShowClick=function ShowClick(){return count;};var ShowDataQty=function ShowDataQty(){return pokemonList.map(function(val){if(val.name===pokemonName){return val.qty+1;}});};var ShowDataId=function ShowDataId(){return pokemonList.map(function(val){if(val.name===pokemonName){return val.id;}});};return/*#__PURE__*/_jsx(\"div\",{className:\"container pokemonDetails\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h2\",{children:pokemonName}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-sm btn-warning\",onClick:ShowClick()%2===1?function(){return[setIsOpen(true),addPokemonQty(pokemonName),setIsOpen2(false),setCount(count+1)];}:function(){return[setIsOpen(false),setIsOpen2(true),setCount(count+1)];},children:\"Catch Pokemon\"}),ShowClick()%2===1?/*#__PURE__*/_jsx(Modal,{open:isOpen2,onClose:function onClose(){return setIsOpen2(false);},children:/*#__PURE__*/_jsx(\"p\",{children:\"Failed to Catch a Pokemon\"})}):/*#__PURE__*/_jsx(Modal,{open:isOpen,onClose:function onClose(){return setIsOpen(false);},children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsx(\"p\",{children:\"Success\"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control modal-input\",type:\"text\",name:\"nickname\",placeholder:\"Nickname\",ref:register}),/*#__PURE__*/_jsx(\"p\",{className:\"nicknameStatus\",children:nicknameStatus}),/*#__PURE__*/_jsx(\"input\",{type:\"hidden\",name:\"id_pokemon\",defaultValue:ShowDataId(),ref:register}),/*#__PURE__*/_jsx(\"input\",{type:\"hidden\",name:\"name\",defaultValue:pokemonName,ref:register}),/*#__PURE__*/_jsx(\"input\",{type:\"hidden\",name:\"qty\",defaultValue:ShowDataQty(),ref:register}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",class:\"btn btn-primary modal-save\"})]})})}),ShowData()]})})});};export default Pokemon;","map":{"version":3,"sources":["D:/React/pokemon2/client/src/containers/Pokemon.js"],"names":["React","useState","useForm","useDispatch","useSelector","GetPokemon","Modal","_","Axios","Pokemon","props","pokemonName","match","params","pokemon","dispatch","pokemonState","state","pokemonList","setPokemonList","isOpen","setIsOpen","isOpen2","setIsOpen2","register","handleSubmit","count","setCount","nicknameStatus","setNicknameStatus","useEffect","ShowData","isEmpty","data","pokeData","sprites","front_default","back_default","types","map","el","type","name","abilities","ability","stats","stat","base_stat","held_items","item","moves","move","game_indices","version","game_index","loading","errorMsg","onSubmit","post","nickname","id_pokemon","qty","then","response","message","addPokemonQty","get","ShowClick","ShowDataQty","val","ShowDataId","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {GetPokemon} from '../actions/pokemonActions';\r\nimport Modal from './Modal';\r\nimport _ from 'lodash';\r\nimport Axios from 'axios';\r\n\r\nconst Pokemon = (props) => {\r\n    const pokemonName = props.match.params.pokemon;\r\n    const dispatch = useDispatch();\r\n    const pokemonState = useSelector(state => state.Pokemon);\r\n    const [pokemonList, setPokemonList] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isOpen2, setIsOpen2] = useState(false);\r\n    const { register, handleSubmit } = useForm();\r\n    const [count, setCount] = useState(0);\r\n    const [nicknameStatus, setNicknameStatus] = useState(\"\");\r\n\r\n    React.useEffect(() => {\r\n        dispatch(GetPokemon(pokemonName))\r\n    }, []);\r\n    \r\n    const ShowData = () => {\r\n        if (!_.isEmpty(pokemonState.data[pokemonName])) {\r\n            const pokeData = pokemonState.data[pokemonName]\r\n            return (\r\n                <div className=\"pokemon\">\r\n                    <div className=\"img\">\r\n                        <img src={pokeData.sprites.front_default} alt=\"\"/>\r\n                        <img src={pokeData.sprites.back_default} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"pokemonWrapper\">\r\n                        <div className=\"item\">\r\n                            <h4>Types</h4>\r\n                            {pokeData.types.map(el => {\r\n                                return <p>{el.type.name}</p>\r\n                            })}\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <h4>Abilities</h4>\r\n                            {pokeData.abilities.map(el => {\r\n                                return <p>{el.ability.name}</p>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"pokemonWrapper\">\r\n                        <div className=\"item\">\r\n                            <h4>Stats</h4>\r\n                            {pokeData.stats.map(el => {\r\n                                return <p>{el.stat.name} : {el.base_stat}</p>\r\n                            })}\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <h4>Held Items</h4>\r\n                            {pokeData.held_items.map(el => {\r\n                                return <p>{el.item.name}</p>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"pokemonWrapper\">\r\n                        <div className=\"item\">\r\n                            <h4>Moves</h4>\r\n                            {pokeData.moves.map(el => {\r\n                                return <p>{el.move.name}</p>\r\n                            })}\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <h4>Game Indices</h4>\r\n                            {pokeData.game_indices.map(el => {\r\n                                return <p>{el.version.name} : {el.game_index}</p>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (pokemonState.loading) {\r\n            return <h1 className=\"loading\">Loading...</h1>\r\n        }\r\n\r\n        if (pokemonState.errorMsg !== \"\") {\r\n            return <p>{pokemonState.errorMsg}</p>\r\n        }\r\n\r\n        return <p>error getting pokemon</p>\r\n    };\r\n    \r\n    const onSubmit = data => {\r\n        Axios.post(\"http://localhost:3001/api/insert\", {\r\n            nickname: data.nickname, \r\n            id_pokemon: data.id_pokemon,\r\n            name: data.name,\r\n            qty: data.qty, \r\n        }).then((response) => {\r\n            if (response.data.message) {\r\n                setNicknameStatus(response.data.message)\r\n            }\r\n        });\r\n        \r\n    };\r\n\r\n    const addPokemonQty = (pokemon) => {\r\n        Axios.get(`http://localhost:3001/api/get/${pokemon}`).then((response) => {\r\n            setPokemonList(response.data)\r\n        });\r\n    };\r\n\r\n    const ShowClick = () => {\r\n        return count;\r\n    };\r\n\r\n    const ShowDataQty = () => {\r\n        return (\r\n            pokemonList.map((val) => {\r\n                if (val.name === pokemonName) {\r\n                    return val.qty + 1;\r\n                }\r\n            })\r\n        )\r\n    };\r\n\r\n    const ShowDataId = () => {\r\n        return (\r\n            pokemonList.map((val) => {\r\n                if (val.name === pokemonName) {\r\n                    return val.id;\r\n                }\r\n            })\r\n        )\r\n    };\r\n\r\n    return (\r\n        <div className=\"container pokemonDetails\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h2>{pokemonName}</h2>\r\n\r\n                    <button \r\n                        className=\"btn btn-sm btn-warning\" \r\n                        onClick={((ShowClick() % 2) === 1) ? () => [setIsOpen(true), addPokemonQty(pokemonName), setIsOpen2(false), setCount(count + 1)] : () => [setIsOpen(false), setIsOpen2(true), setCount(count + 1)]}>\r\n                            Catch Pokemon\r\n                    </button>\r\n\r\n                    {((ShowClick() % 2) === 1) ? \r\n                    \r\n                        <Modal open={isOpen2} onClose={() => setIsOpen2(false)}>\r\n                            <p>Failed to Catch a Pokemon</p>\r\n                        </Modal>\r\n                    \r\n                    :   <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n                            <div>\r\n                                <form onSubmit={handleSubmit(onSubmit)}>\r\n                                    <p>Success</p>\r\n                                    <input className=\"form-control modal-input\" type=\"text\" name=\"nickname\" placeholder=\"Nickname\" ref={register}/>\r\n\r\n                                    <p className=\"nicknameStatus\">{nicknameStatus}</p>\r\n\r\n                                    <input type=\"hidden\" name=\"id_pokemon\" defaultValue={ShowDataId()} ref={register} />\r\n\r\n                                    <input type=\"hidden\" name=\"name\" defaultValue={pokemonName} ref={register} />\r\n\r\n                                    <input type=\"hidden\" name=\"qty\" defaultValue={ShowDataQty()} ref={register} />\r\n                                    \r\n                                    <input type=\"submit\" class=\"btn btn-primary modal-save\" />\r\n                                </form>\r\n                                \r\n                            </div>\r\n                        </Modal> \r\n                    }\r\n                    \r\n                    {ShowData()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}