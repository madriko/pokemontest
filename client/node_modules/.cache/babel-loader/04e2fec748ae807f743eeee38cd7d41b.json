{"ast":null,"code":"import _slicedToArray from\"D:/React/pokemon2/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{GetPokemon}from'../actions/pokemonActions';import Axios from'axios';export default function MyPokemonList(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),myPokemonList=_useState2[0],setMyPokemonList=_useState2[1];var pokemonName=props.match.params.pokemon;var dispatch=useDispatch();var pokemonState=useSelector(function(state){return state.Pokemon;});var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),pokemonList=_useState4[0],setPokemonList=_useState4[1];React.useEffect(function(){dispatch(GetPokemon(pokemonName));},[]);useEffect(function(){Axios.get('http://localhost:3001/api/getmypokemon').then(function(response){setMyPokemonList(response.data);});},[]);var deletePokemon=function deletePokemon(pokemon){Axios.delete(\"http://localhost:3001/api/delete/\".concat(pokemon));};var addPokemonQty=function addPokemonQty(pokemon){Axios.get(\"http://localhost:3001/api/get/\".concat(pokemon)).then(function(response){setPokemonList(response.data);});};var ShowDataQty=function ShowDataQty(){return pokemonList.map(function(val){if(val.name===pokemonName){return val.qty+1;}});};return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:myPokemonList.map(function(val){return/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Name : \",val.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Nickname : \",val.nickname]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-sm btn-danger\",onClick:function onClick(){deletePokemon(val.nickname);},children:\"Remove\"})]})});})});}","map":{"version":3,"sources":["D:/React/pokemon2/client/src/containers/MyPokemonList.js"],"names":["React","useState","useEffect","useDispatch","useSelector","GetPokemon","Axios","MyPokemonList","props","myPokemonList","setMyPokemonList","pokemonName","match","params","pokemon","dispatch","pokemonState","state","Pokemon","pokemonList","setPokemonList","get","then","response","data","deletePokemon","delete","addPokemonQty","ShowDataQty","map","val","name","qty","nickname"],"mappings":"uOAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAAQC,UAAR,KAAyB,2BAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,cAAe,SAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,eACCP,QAAQ,CAAC,EAAD,CADT,wCAClCQ,aADkC,eACnBC,gBADmB,eAEzC,GAAMC,CAAAA,WAAW,CAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC,OAAvC,CACA,GAAMC,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CACA,GAAMa,CAAAA,YAAY,CAAGZ,WAAW,CAAC,SAAAa,KAAK,QAAIA,CAAAA,KAAK,CAACC,OAAV,EAAN,CAAhC,CAJyC,eAKHjB,QAAQ,CAAC,EAAD,CALL,yCAKlCkB,WALkC,eAKrBC,cALqB,eAOzCpB,KAAK,CAACE,SAAN,CAAgB,UAAM,CAClBa,QAAQ,CAACV,UAAU,CAACM,WAAD,CAAX,CAAR,CACH,CAFD,CAEG,EAFH,EAIAT,SAAS,CAAC,UAAM,CACZI,KAAK,CAACe,GAAN,CAAU,wCAAV,EAAoDC,IAApD,CAAyD,SAACC,QAAD,CAAc,CACnEb,gBAAgB,CAACa,QAAQ,CAACC,IAAV,CAAhB,CACH,CAFD,EAGH,CAJQ,CAIN,EAJM,CAAT,CAMA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACX,OAAD,CAAa,CAC/BR,KAAK,CAACoB,MAAN,4CAAiDZ,OAAjD,GAEH,CAHD,CAKA,GAAMa,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACb,OAAD,CAAa,CAC/BR,KAAK,CAACe,GAAN,yCAA2CP,OAA3C,GAAsDQ,IAAtD,CAA2D,SAACC,QAAD,CAAc,CACrEH,cAAc,CAACG,QAAQ,CAACC,IAAV,CAAd,CACH,CAFD,EAGH,CAJD,CAMA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,MACIT,CAAAA,WAAW,CAACU,GAAZ,CAAgB,SAACC,GAAD,CAAS,CACrB,GAAIA,GAAG,CAACC,IAAJ,GAAapB,WAAjB,CAA8B,CAC1B,MAAOmB,CAAAA,GAAG,CAACE,GAAJ,CAAU,CAAjB,CACH,CACJ,CAJD,CADJ,CAOH,CARD,CAUA,mBACI,YAAK,SAAS,CAAC,WAAf,UACKvB,aAAa,CAACoB,GAAd,CAAkB,SAACC,GAAD,CAAS,CACxB,mBACI,YAAK,SAAS,CAAC,MAAf,uBACI,aAAK,SAAS,CAAC,WAAf,wBACI,+BAAWA,GAAG,CAACC,IAAf,GADJ,cAEI,mCAAeD,GAAG,CAACG,QAAnB,GAFJ,cAGI,eAAQ,SAAS,CAAC,uBAAlB,CAA0C,OAAO,CAAE,kBAAM,CAACR,aAAa,CAACK,GAAG,CAACG,QAAL,CAAb,CAA4B,CAAtF,oBAHJ,GADJ,EADJ,CASH,CAVA,CADL,EADJ,CAeH","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {GetPokemon} from '../actions/pokemonActions'\r\nimport Axios from 'axios'\r\n\r\nexport default function MyPokemonList(props) {\r\n    const [myPokemonList, setMyPokemonList] = useState([])\r\n    const pokemonName = props.match.params.pokemon\r\n    const dispatch = useDispatch()\r\n    const pokemonState = useSelector(state => state.Pokemon)\r\n    const [pokemonList, setPokemonList] = useState([])\r\n\r\n    React.useEffect(() => {\r\n        dispatch(GetPokemon(pokemonName))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:3001/api/getmypokemon').then((response) => {\r\n            setMyPokemonList(response.data)\r\n        })\r\n    }, [])\r\n\r\n    const deletePokemon = (pokemon) => {\r\n        Axios.delete(`http://localhost:3001/api/delete/${pokemon}`)\r\n        \r\n    }\r\n\r\n    const addPokemonQty = (pokemon) => {\r\n        Axios.get(`http://localhost:3001/api/get/${pokemon}`).then((response) => {\r\n            setPokemonList(response.data)\r\n        })\r\n    }\r\n\r\n    const ShowDataQty = () => {\r\n        return (\r\n            pokemonList.map((val) => {\r\n                if (val.name === pokemonName) {\r\n                    return val.qty + 1\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {myPokemonList.map((val) => {\r\n                return (\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <p>Name : {val.name}</p>\r\n                            <p>Nickname : {val.nickname}</p>\r\n                            <button className=\"btn btn-sm btn-danger\" onClick={() => {deletePokemon(val.nickname)}}>Remove</button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}