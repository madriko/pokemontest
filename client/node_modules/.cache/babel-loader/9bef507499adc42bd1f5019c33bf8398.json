{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import{useDispatch,useSelector}from'react-redux';import _ from'lodash';import{GetPokemonList}from'../actions/pokemonActions';import{Link}from'react-router-dom';import ReactPaginate from'react-paginate';var PokemonList=function PokemonList(){var dispatch=useDispatch();var pokemonList=useSelector(function(state){return state.PokemonList;});React.useEffect(function(){FetchData(1);},[]);var FetchData=function FetchData(){var page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;dispatch(GetPokemonList(page));};if(pokemonList.loading){return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});}var ShowData=function ShowData(){if(!_.isEmpty(pokemonList.data)){return pokemonList.data.map(function(el){return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"p\",{children:el.name}),/*#__PURE__*/_jsx(Link,{to:\"/pokemon/\".concat(el.name),children:\"View\"})]})})});});}if(pokemonList.errorMsg!==\"\"){return/*#__PURE__*/_jsx(\"p\",{children:pokemonList.errorMsg});}return/*#__PURE__*/_jsx(\"p\",{children:\"unable to get data\"});};return/*#__PURE__*/_jsxs(\"div\",{children:[ShowData(),!_.isEmpty(pokemonList.data)&&/*#__PURE__*/_jsx(ReactPaginate,{pageCount:Math.ceil(pokemonList.count/20),pageRangeDisplayed:2,marginPagesDisplayed:1,onPageChange:function onPageChange(data){return FetchData(data.selected+1);}})]});};export default PokemonList;","map":{"version":3,"sources":["D:/React/pokemon2/src/containers/PokemonList.js"],"names":["React","useDispatch","useSelector","_","GetPokemonList","Link","ReactPaginate","PokemonList","dispatch","pokemonList","state","useEffect","FetchData","page","loading","ShowData","isEmpty","data","map","el","name","errorMsg","Math","ceil","count","selected"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CACA,OAASC,cAAT,KAA+B,2BAA/B,CACA,OAAQC,IAAR,KAAmB,kBAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,gBAA1B,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMQ,CAAAA,WAAW,CAAGP,WAAW,CAAC,SAAAQ,KAAK,QAAIA,CAAAA,KAAK,CAACH,WAAV,EAAN,CAA/B,CAEAP,KAAK,CAACW,SAAN,CAAgB,UAAM,CAClBC,SAAS,CAAC,CAAD,CAAT,CACH,CAFD,CAEG,EAFH,EAIA,GAAMA,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAc,IAAbC,CAAAA,IAAa,2DAAN,CAAM,CAC5BL,QAAQ,CAACJ,cAAc,CAACS,IAAD,CAAf,CAAR,CACH,CAFD,CAIA,GAAIJ,WAAW,CAACK,OAAhB,CAAyB,CACrB,mBAAO,iCAAP,CACH,CAED,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,GAAI,CAACZ,CAAC,CAACa,OAAF,CAAUP,WAAW,CAACQ,IAAtB,CAAL,CAAkC,CAC9B,MAAOR,CAAAA,WAAW,CAACQ,IAAZ,CAAiBC,GAAjB,CAAqB,SAAAC,EAAE,CAAI,CAC9B,mBACI,YAAK,SAAS,CAAC,WAAf,uBACI,YAAK,SAAS,CAAC,MAAf,uBACI,aAAK,SAAS,CAAC,WAAf,wBACI,mBAAIA,EAAE,CAACC,IAAP,EADJ,cAEI,KAAC,IAAD,EAAM,EAAE,oBAAcD,EAAE,CAACC,IAAjB,CAAR,kBAFJ,GADJ,EADJ,EADJ,CAUH,CAXM,CAAP,CAaH,CAED,GAAIX,WAAW,CAACY,QAAZ,GAAyB,EAA7B,CAAiC,CAC7B,mBAAO,mBAAIZ,WAAW,CAACY,QAAhB,EAAP,CACH,CAED,mBAAO,yCAAP,CACH,CAtBD,CAwBA,mBACI,uBACKN,QAAQ,EADb,CAEK,CAACZ,CAAC,CAACa,OAAF,CAAUP,WAAW,CAACQ,IAAtB,CAAD,eACG,KAAC,aAAD,EACI,SAAS,CAAEK,IAAI,CAACC,IAAL,CAAUd,WAAW,CAACe,KAAZ,CAAoB,EAA9B,CADf,CAEI,kBAAkB,CAAE,CAFxB,CAGI,oBAAoB,CAAE,CAH1B,CAII,YAAY,CAAE,sBAACP,IAAD,QAAUL,CAAAA,SAAS,CAACK,IAAI,CAACQ,QAAL,CAAgB,CAAjB,CAAnB,EAJlB,EAHR,GADJ,CAaH,CArDD,CAuDA,cAAelB,CAAAA,WAAf","sourcesContent":["import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport _ from 'lodash'\r\nimport { GetPokemonList } from '../actions/pokemonActions'\r\nimport {Link} from 'react-router-dom'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\nconst PokemonList = () => {\r\n    const dispatch = useDispatch()\r\n    const pokemonList = useSelector(state => state.PokemonList)\r\n\r\n    React.useEffect(() => {\r\n        FetchData(1)\r\n    }, [])\r\n\r\n    const FetchData = (page = 1) => {\r\n        dispatch(GetPokemonList(page))\r\n    }\r\n\r\n    if (pokemonList.loading) {\r\n        return <p>Loading...</p>\r\n    }\r\n\r\n    const ShowData = () => {\r\n        if (!_.isEmpty(pokemonList.data)) {\r\n            return pokemonList.data.map(el => {\r\n                return (\r\n                    <div className=\"container\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <p>{el.name}</p>\r\n                                <Link to={`/pokemon/${el.name}`}>View</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n                \r\n        }\r\n\r\n        if (pokemonList.errorMsg !== \"\") {\r\n            return <p>{pokemonList.errorMsg}</p>\r\n        }\r\n\r\n        return <p>unable to get data</p>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {ShowData()}\r\n            {!_.isEmpty(pokemonList.data) && (\r\n                <ReactPaginate \r\n                    pageCount={Math.ceil(pokemonList.count / 20)}\r\n                    pageRangeDisplayed={2}\r\n                    marginPagesDisplayed={1}\r\n                    onPageChange={(data) => FetchData(data.selected + 1)}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonList"]},"metadata":{},"sourceType":"module"}