{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\React\\\\pokemon2\\\\client\\\\src\\\\containers\\\\Pokemon.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetPokemon } from '../actions/pokemonActions';\nimport Modal from './Modal';\nimport ModalFailed from './ModalFailed';\nimport _ from 'lodash';\nimport Axios from 'axios';\n\nconst Pokemon = props => {\n  _s();\n\n  const pokemonName = props.match.params.pokemon;\n  const dispatch = useDispatch();\n  const pokemonState = useSelector(state => state.Pokemon);\n  const [pokemonList, setPokemonList] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpen2, setIsOpen2] = useState(false);\n  const [name, setName] = useState('');\n  const [nickname, setNickname] = useState('');\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  React.useEffect(() => {\n    dispatch(GetPokemon(pokemonName));\n  }, []);\n\n  const ShowData = () => {\n    if (!_.isEmpty(pokemonState.data[pokemonName])) {\n      const pokeData = pokemonState.data[pokemonName];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: pokeData.sprites.front_default,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pokeData.sprites.back_default,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemonWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), pokeData.types.map(el => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: el.type.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Abilities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), pokeData.abilities.map(el => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: el.ability.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemonWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Stats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), pokeData.stats.map(el => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [el.stat.name, \" : \", el.base_stat]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Held Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), pokeData.held_items.map(el => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: el.item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemonWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Moves\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), pokeData.moves.map(el => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: el.move.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Game Indices\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), pokeData.game_indices.map(el => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [el.version.name, \" : \", el.game_index]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (pokemonState.loading) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (pokemonState.errorMsg !== \"\") {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: pokemonState.errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"error getting pokemon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 16\n    }, this);\n  };\n\n  const onSubmit = data => {\n    Axios.post(\"http://localhost:3001/api/insert\", {\n      nickname: data.nickname,\n      name: data.name\n    }).then(() => {\n      alert(\"successful insert\");\n    });\n  };\n\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    Axios.get('http://localhost:3001/api/get').then(response => {\n      setPokemonList(response.data);\n    });\n  }, []);\n\n  const ShowClick = () => {\n    return count;\n  };\n\n  const ShowDataQty = () => {\n    return pokemonList.map(val => {\n      return val.name == pokemonName ? val.qty : \"\";\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container pokemonDetails\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: pokemonName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: ShowClick() % 2 == 1 ? () => [setIsOpen(true), setIsOpen2(false), setCount(count + 1)] : () => [setIsOpen(false), setIsOpen2(true), setCount(count + 1)],\n          children: \"Catch Pokemon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), ShowClick() % 2 == 1 ? /*#__PURE__*/_jsxDEV(ModalFailed, {\n          open: isOpen2,\n          onClose: () => setIsOpen2(false),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Failed to Caught Pokemon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Modal, {\n          open: isOpen,\n          onClose: () => setIsOpen(false),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit(onSubmit),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control modal-input\",\n                type: \"text\",\n                name: \"nickname\",\n                placeholder: \"Nickname\",\n                ref: register\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"hidden\",\n                name: \"name\",\n                defaultValue: pokemonName,\n                ref: register\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                defaultValue: ShowDataQty(),\n                ref: register\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                class: \"btn btn-primary modal-save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this), ShowData()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pokemon, \"5kfxVq4ktxjPMYGb9gQ4u1ctFBo=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c = Pokemon;\nexport default Pokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"sources":["D:/React/pokemon2/client/src/containers/Pokemon.js"],"names":["React","Component","useState","useEffect","useForm","useDispatch","useSelector","GetPokemon","Modal","ModalFailed","_","Axios","Pokemon","props","pokemonName","match","params","pokemon","dispatch","pokemonState","state","pokemonList","setPokemonList","isOpen","setIsOpen","isOpen2","setIsOpen2","name","setName","nickname","setNickname","register","handleSubmit","ShowData","isEmpty","data","pokeData","sprites","front_default","back_default","types","map","el","type","abilities","ability","stats","stat","base_stat","held_items","item","moves","move","game_indices","version","game_index","loading","errorMsg","onSubmit","post","then","alert","count","setCount","get","response","ShowClick","ShowDataQty","val","qty"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {GetPokemon} from '../actions/pokemonActions'\r\nimport Modal from './Modal'\r\nimport ModalFailed from './ModalFailed'\r\nimport _ from 'lodash'\r\nimport Axios from 'axios'\r\n\r\nconst Pokemon = (props) => {\r\n    const pokemonName = props.match.params.pokemon\r\n    const dispatch = useDispatch()\r\n    const pokemonState = useSelector(state => state.Pokemon)\r\n    const [pokemonList, setPokemonList] = useState([])\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [isOpen2, setIsOpen2] = useState(false)\r\n    const [name, setName] = useState('')\r\n    const [nickname, setNickname] = useState('')\r\n    const { register, handleSubmit } = useForm()\r\n    \r\n\r\n    React.useEffect(() => {\r\n        dispatch(GetPokemon(pokemonName))\r\n    }, [])\r\n    \r\n    const ShowData = () => {\r\n        if (!_.isEmpty(pokemonState.data[pokemonName])) {\r\n            const pokeData = pokemonState.data[pokemonName]\r\n            return (\r\n                <div className=\"pokemon\">\r\n                    <div className=\"img\">\r\n                        <img src={pokeData.sprites.front_default} alt=\"\"/>\r\n                        <img src={pokeData.sprites.back_default} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"pokemonWrapper\">\r\n                        <div className=\"item\">\r\n                            <h4>Types</h4>\r\n                            {pokeData.types.map(el => {\r\n                                return <p>{el.type.name}</p>\r\n                            })}\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <h4>Abilities</h4>\r\n                            {pokeData.abilities.map(el => {\r\n                                return <p>{el.ability.name}</p>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"pokemonWrapper\">\r\n                        <div className=\"item\">\r\n                            <h4>Stats</h4>\r\n                            {pokeData.stats.map(el => {\r\n                                return <p>{el.stat.name} : {el.base_stat}</p>\r\n                            })}\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <h4>Held Items</h4>\r\n                            {pokeData.held_items.map(el => {\r\n                                return <p>{el.item.name}</p>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"pokemonWrapper\">\r\n                        <div className=\"item\">\r\n                            <h4>Moves</h4>\r\n                            {pokeData.moves.map(el => {\r\n                                return <p>{el.move.name}</p>\r\n                            })}\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <h4>Game Indices</h4>\r\n                            {pokeData.game_indices.map(el => {\r\n                                return <p>{el.version.name} : {el.game_index}</p>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (pokemonState.loading) {\r\n            return <h1 className=\"loading\">Loading...</h1>\r\n        }\r\n\r\n        if (pokemonState.errorMsg !== \"\") {\r\n            return <p>{pokemonState.errorMsg}</p>\r\n        }\r\n\r\n        return <p>error getting pokemon</p>\r\n    }\r\n    \r\n    const onSubmit = data => {\r\n        Axios.post(\"http://localhost:3001/api/insert\", {\r\n            nickname: data.nickname, \r\n            name: data.name, \r\n        }).then(() => {\r\n            alert(\"successful insert\")\r\n        })\r\n    }\r\n\r\n    const [count, setCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:3001/api/get').then((response) => {\r\n            setPokemonList(response.data)\r\n        })\r\n    }, [])\r\n\r\n    const ShowClick = () => {\r\n        return count\r\n        \r\n      }\r\n\r\n    const ShowDataQty = () => {\r\n        return (\r\n            pokemonList.map((val) => {\r\n                return (\r\n                    (val.name == pokemonName) ? val.qty : \"\"\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container pokemonDetails\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h2>{pokemonName}</h2>\r\n\r\n                    <button \r\n                        className=\"btn btn-warning\" \r\n                        onClick={((ShowClick() % 2) == 1) ? () => [setIsOpen(true), setIsOpen2(false), setCount(count + 1)] : () => [setIsOpen(false), setIsOpen2(true), setCount(count + 1)]}>\r\n                            Catch Pokemon\r\n                    </button>\r\n\r\n                    {((ShowClick() % 2) == 1) ? \r\n                    \r\n                        <ModalFailed open={isOpen2} onClose={() => setIsOpen2(false)}>\r\n                            <p>Failed to Caught Pokemon</p>\r\n                        </ModalFailed>\r\n                    \r\n                    :   <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n                            <div>\r\n                                <form onSubmit={handleSubmit(onSubmit)}>\r\n                                    <input className=\"form-control modal-input\" type=\"text\" name=\"nickname\" placeholder=\"Nickname\" ref={register}/>\r\n\r\n                                    <input type=\"hidden\" name=\"name\" defaultValue={pokemonName} ref={register} />\r\n\r\n                                    <input type=\"text\" name=\"name\" defaultValue={ShowDataQty()} ref={register} />\r\n                                    \r\n                                    <input type=\"submit\" class=\"btn btn-primary modal-save\" />\r\n                                </form>\r\n                                \r\n                            </div>\r\n                        </Modal> \r\n                    }\r\n                    \r\n                    {ShowData()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pokemon"]},"metadata":{},"sourceType":"module"}