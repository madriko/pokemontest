{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\React\\\\pokemon2\\\\src\\\\containers\\\\PokemonList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport _ from 'lodash';\nimport { GetPokemonList } from '../actions/pokemonActions';\nimport { Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\n\nconst PokemonList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [nextUrl, setNextUrl] = useState('');\n  const [prevUrl, setPrevUrl] = useState('');\n  const [loading, setLoading] = useState(true);\n  const pokemonList = useSelector(state => state.PokemonList);\n  useEffect(() => {\n    FetchData(1);\n  }, []);\n\n  const FetchData = (page = 1) => {\n    dispatch(GetPokemonList(page));\n  };\n\n  const next = async page => {\n    setLoading(true);\n    let data = await GetPokemonList(page);\n    setNextUrl(data.next);\n    setPrevUrl(data.previous);\n    setLoading(false);\n  };\n\n  const prev = async page => {\n    if (!prevUrl) return;\n    setLoading(true);\n    let data = await GetPokemonList(page);\n    setNextUrl(data.next);\n    setPrevUrl(data.previous);\n    setLoading(false);\n  };\n\n  if (pokemonList.loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  }\n\n  const ShowData = () => {\n    if (!_.isEmpty(pokemonList.data)) {\n      return pokemonList.data.map(el => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: el.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/pokemon/${el.name}`,\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this);\n      });\n    }\n\n    if (pokemonList.errorMsg !== \"\") {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: pokemonList.errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"unable to get data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [ShowData(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: prev,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: next,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), !_.isEmpty(pokemonList.data) && /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      pageCount: Math.ceil(pokemonList.count / 20),\n      onPageChange: data => console.log(data.selected + 1),\n      pageRangeDisplayed: 2,\n      marginPagesDisplayed: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PokemonList, \"Je+b/v4Z4vuIcVNmqw2Kuy2cdT4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PokemonList;\nexport default PokemonList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonList\");","map":{"version":3,"sources":["D:/React/pokemon2/src/containers/PokemonList.js"],"names":["React","useState","useEffect","useDispatch","useSelector","_","GetPokemonList","Link","ReactPaginate","PokemonList","dispatch","nextUrl","setNextUrl","prevUrl","setPrevUrl","loading","setLoading","pokemonList","state","FetchData","page","next","data","previous","prev","ShowData","isEmpty","map","el","name","errorMsg","Math","ceil","count","console","log","selected"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport _ from 'lodash'\r\nimport { GetPokemonList } from '../actions/pokemonActions'\r\nimport {Link} from 'react-router-dom'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\nconst PokemonList = () => {\r\n    const dispatch = useDispatch()\r\n    const [nextUrl, setNextUrl] = useState('')\r\n    const [prevUrl, setPrevUrl] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const pokemonList = useSelector(state => state.PokemonList)\r\n\r\n    useEffect(() => {\r\n        FetchData(1)\r\n    }, [])\r\n\r\n    const FetchData = (page = 1) => {\r\n        dispatch(GetPokemonList(page))\r\n    }\r\n\r\n    const next = async (page) => {\r\n        setLoading(true)\r\n        let data = await GetPokemonList(page)\r\n        setNextUrl(data.next)\r\n        setPrevUrl(data.previous)\r\n        setLoading(false)\r\n    }\r\n\r\n    const prev = async (page) => {\r\n        if (!prevUrl) return\r\n        setLoading(true)\r\n        let data = await GetPokemonList(page)\r\n        setNextUrl(data.next)\r\n        setPrevUrl(data.previous)\r\n        setLoading(false)\r\n    }\r\n\r\n    if (pokemonList.loading) {\r\n        return <p>Loading...</p>\r\n    }\r\n\r\n    const ShowData = () => {\r\n        if (!_.isEmpty(pokemonList.data)) {\r\n            return pokemonList.data.map(el => {\r\n                return (\r\n                    <div className=\"container\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <p>{el.name}</p>\r\n                                <Link to={`/pokemon/${el.name}`}>View</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                )\r\n            })   \r\n        }\r\n\r\n        if (pokemonList.errorMsg !== \"\") {\r\n            return <p>{pokemonList.errorMsg}</p>\r\n        }\r\n\r\n        return <p>unable to get data</p>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {ShowData()}\r\n            <div className=\"button\">\r\n                            <button className=\"btn btn-primary\" onClick={prev}>Previous</button>\r\n                            <button className=\"btn btn-primary\" onClick={next}>Next</button>\r\n                        </div>\r\n            {!_.isEmpty(pokemonList.data) && (\r\n                <ReactPaginate \r\n                    pageCount={Math.ceil(pokemonList.count / 20)}\r\n                    onPageChange={(data) => console.log(data.selected + 1)}\r\n                    pageRangeDisplayed={2}\r\n                    marginPagesDisplayed={1}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonList"]},"metadata":{},"sourceType":"module"}