{"ast":null,"code":"import _slicedToArray from\"D:/React/pokemon2/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{Component,useState}from'react';import{useForm}from'react-hook-form';import{useDispatch,useSelector}from'react-redux';import{GetPokemon}from'../actions/pokemonActions';import Modal from'./Modal';import _ from'lodash';import Axios from'axios';var Pokemon=function Pokemon(props){var pokemonName=props.match.params.pokemon;var dispatch=useDispatch();var pokemonState=useSelector(function(state){return state.Pokemon;});var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setName=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),nickname=_useState6[0],setNickname=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),id_pokemon=_useState8[0],setIdPokemon=_useState8[1];React.useEffect(function(){dispatch(GetPokemon(pokemonName));},[]);var ShowData=function ShowData(){if(!_.isEmpty(pokemonState.data[pokemonName])){var pokeData=pokemonState.data[pokemonName];return/*#__PURE__*/_jsxs(\"div\",{className:\"pokemon\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"img\",children:[/*#__PURE__*/_jsx(\"img\",{src:pokeData.sprites.front_default,alt:\"\"}),/*#__PURE__*/_jsx(\"img\",{src:pokeData.sprites.back_default,alt:\"\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pokemonWrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Types\"}),pokeData.types.map(function(el){return/*#__PURE__*/_jsx(\"p\",{children:el.type.name});})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Abilities\"}),pokeData.abilities.map(function(el){return/*#__PURE__*/_jsx(\"p\",{children:el.ability.name});})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pokemonWrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Stats\"}),pokeData.stats.map(function(el){return/*#__PURE__*/_jsxs(\"p\",{children:[el.stat.name,\" : \",el.base_stat]});})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Held Items\"}),pokeData.held_items.map(function(el){return/*#__PURE__*/_jsx(\"p\",{children:el.item.name});})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pokemonWrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Moves\"}),pokeData.moves.map(function(el){return/*#__PURE__*/_jsx(\"p\",{children:el.move.name});})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"item\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Game Indices\"}),pokeData.game_indices.map(function(el){return/*#__PURE__*/_jsxs(\"p\",{children:[el.version.name,\" : \",el.game_index]});})]})]})]});}if(pokemonState.loading){return/*#__PURE__*/_jsx(\"h1\",{className:\"loading\",children:\"Loading...\"});}if(pokemonState.errorMsg!==\"\"){return/*#__PURE__*/_jsx(\"p\",{children:pokemonState.errorMsg});}return/*#__PURE__*/_jsx(\"p\",{children:\"error getting pokemon\"});};// const ShowDataId = () => {\n//     if (!_.isEmpty(pokemonState.data[pokemonName])) {\n//         const pokeDataId = pokemonState.data[pokemonName]\n//         return (\n//             <input className=\"form-control modal-input\" type=\"hidden\" name=\"id_pokemon\" value={pokeDataId.id} onChange={(e) => {setIdPokemon(e.target.value)}}/>\n//         )\n//     }\n//     if (pokemonState.loading) {\n//         return <h1 className=\"loading\">Loading...</h1>\n//     }\n//     if (pokemonState.errorMsg !== \"\") {\n//         return <p>{pokemonState.errorMsg}</p>\n//     }\n//     return <p>error getting pokemon</p>\n// }\nvar submitNickname=function submitNickname(){Axios.post(\"http://localhost:3001/api/insert\",{nickname:nickname,name:name}).then(function(){alert(\"successful insert\");});};var _useForm=useForm({defaultValues:{firstName:pokemonName}}),register=_useForm.register;return/*#__PURE__*/_jsx(\"div\",{className:\"container pokemonDetails\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h2\",{children:pokemonName}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-warning\",onClick:function onClick(){return setIsOpen(true);},children:\"Catch Pokemon\"}),/*#__PURE__*/_jsx(Modal,{open:isOpen,onClose:function onClose(){return setIsOpen(false);},children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-control modal-input\",type:\"text\",name:\"nickname\",placeholder:\"Nickname\",onChange:function onChange(e){setNickname(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control modal-input\",type:\"hidden\",name:\"name\",value:pokemonName,onChange:function onChange(e){setName(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{name:\"firstName\",ref:register}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",class:\"btn btn-primary modal-save\",onClick:submitNickname,children:\"Save\"})]})}),ShowData()]})})});};export default Pokemon;","map":{"version":3,"sources":["D:/React/pokemon2/client/src/containers/Pokemon.js"],"names":["React","Component","useState","useForm","useDispatch","useSelector","GetPokemon","Modal","_","Axios","Pokemon","props","pokemonName","match","params","pokemon","dispatch","pokemonState","state","isOpen","setIsOpen","name","setName","nickname","setNickname","id_pokemon","setIdPokemon","useEffect","ShowData","isEmpty","data","pokeData","sprites","front_default","back_default","types","map","el","type","abilities","ability","stats","stat","base_stat","held_items","item","moves","move","game_indices","version","game_index","loading","errorMsg","submitNickname","post","then","alert","defaultValues","firstName","register","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {GetPokemon} from '../actions/pokemonActions'\r\nimport Modal from './Modal'\r\nimport _ from 'lodash'\r\nimport Axios from 'axios'\r\n\r\nconst Pokemon = (props) => {\r\n    const pokemonName = props.match.params.pokemon\r\n    const dispatch = useDispatch()\r\n    const pokemonState = useSelector(state => state.Pokemon)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [name, setName] = useState('')\r\n    const [nickname, setNickname] = useState('')\r\n    const [id_pokemon, setIdPokemon] = useState('')\r\n    \r\n\r\n    React.useEffect(() => {\r\n        dispatch(GetPokemon(pokemonName))\r\n    }, [])\r\n    \r\n    const ShowData = () => {\r\n        if (!_.isEmpty(pokemonState.data[pokemonName])) {\r\n            const pokeData = pokemonState.data[pokemonName]\r\n            return (\r\n                <div className=\"pokemon\">\r\n                    <div className=\"img\">\r\n                        <img src={pokeData.sprites.front_default} alt=\"\"/>\r\n                        <img src={pokeData.sprites.back_default} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"pokemonWrapper\">\r\n                        <div className=\"item\">\r\n                            <h4>Types</h4>\r\n                            {pokeData.types.map(el => {\r\n                                return <p>{el.type.name}</p>\r\n                            })}\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <h4>Abilities</h4>\r\n                            {pokeData.abilities.map(el => {\r\n                                return <p>{el.ability.name}</p>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"pokemonWrapper\">\r\n                        <div className=\"item\">\r\n                            <h4>Stats</h4>\r\n                            {pokeData.stats.map(el => {\r\n                                return <p>{el.stat.name} : {el.base_stat}</p>\r\n                            })}\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <h4>Held Items</h4>\r\n                            {pokeData.held_items.map(el => {\r\n                                return <p>{el.item.name}</p>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"pokemonWrapper\">\r\n                        <div className=\"item\">\r\n                            <h4>Moves</h4>\r\n                            {pokeData.moves.map(el => {\r\n                                return <p>{el.move.name}</p>\r\n                            })}\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <h4>Game Indices</h4>\r\n                            {pokeData.game_indices.map(el => {\r\n                                return <p>{el.version.name} : {el.game_index}</p>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (pokemonState.loading) {\r\n            return <h1 className=\"loading\">Loading...</h1>\r\n        }\r\n\r\n        if (pokemonState.errorMsg !== \"\") {\r\n            return <p>{pokemonState.errorMsg}</p>\r\n        }\r\n\r\n        return <p>error getting pokemon</p>\r\n    }\r\n\r\n    // const ShowDataId = () => {\r\n    //     if (!_.isEmpty(pokemonState.data[pokemonName])) {\r\n    //         const pokeDataId = pokemonState.data[pokemonName]\r\n    //         return (\r\n    //             <input className=\"form-control modal-input\" type=\"hidden\" name=\"id_pokemon\" value={pokeDataId.id} onChange={(e) => {setIdPokemon(e.target.value)}}/>\r\n    //         )\r\n    //     }\r\n\r\n    //     if (pokemonState.loading) {\r\n    //         return <h1 className=\"loading\">Loading...</h1>\r\n    //     }\r\n\r\n    //     if (pokemonState.errorMsg !== \"\") {\r\n    //         return <p>{pokemonState.errorMsg}</p>\r\n    //     }\r\n\r\n    //     return <p>error getting pokemon</p>\r\n    // }\r\n\r\n    const submitNickname = () => {\r\n        Axios.post(\"http://localhost:3001/api/insert\", {\r\n            nickname: nickname, \r\n            name: name, \r\n        }).then(() => {\r\n            alert(\"successful insert\")\r\n        })\r\n    }\r\n\r\n    const { register } = useForm({\r\n        defaultValues: {\r\n          firstName: pokemonName,\r\n        }\r\n      })\r\n      \r\n      \r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container pokemonDetails\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h2>{pokemonName}</h2>\r\n                    <button className=\"btn btn-warning\" onClick={() => setIsOpen(true)}>Catch Pokemon</button>\r\n                    <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n                        <div>\r\n                            <input className=\"form-control modal-input\" type=\"text\" name=\"nickname\" placeholder=\"Nickname\" onChange={(e) => {setNickname(e.target.value)}}/>\r\n\r\n                            <input className=\"form-control modal-input\" type=\"hidden\" name=\"name\" value={pokemonName} onChange={(e) => {setName(e.target.value)}}/>\r\n\r\n                            <input name=\"firstName\" ref={register} />\r\n                            \r\n                            <button type=\"submit\" class=\"btn btn-primary modal-save\" onClick={submitNickname}>Save</button>\r\n                        </div>\r\n                    </Modal>\r\n                    {ShowData()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pokemon"]},"metadata":{},"sourceType":"module"}