{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\React\\\\pokemon2\\\\client\\\\src\\\\containers\\\\Pokemon.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetPokemon } from '../actions/pokemonActions';\nimport Modal from './Modal';\nimport _ from 'lodash';\nimport Axios from 'axios';\n\nconst Pokemon = props => {\n  _s();\n\n  var _class, _temp;\n\n  const pokemonName = props.match.params.pokemon;\n  const dispatch = useDispatch();\n  const pokemonState = useSelector(state => state.Pokemon);\n  const [isOpen, setIsOpen] = useState(false);\n  const [name, setName] = useState('');\n  const [nickname, setNickname] = useState('');\n  const [id_pokemon, setIdPokemon] = useState('');\n  React.useEffect(() => {\n    dispatch(GetPokemon(pokemonName));\n  }, []);\n\n  const ShowData = () => {\n    if (!_.isEmpty(pokemonState.data[pokemonName])) {\n      const pokeData = pokemonState.data[pokemonName];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: pokeData.sprites.front_default,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pokeData.sprites.back_default,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemonWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), pokeData.types.map(el => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: el.type.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Abilities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), pokeData.abilities.map(el => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: el.ability.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemonWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Stats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), pokeData.stats.map(el => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [el.stat.name, \" : \", el.base_stat]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Held Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), pokeData.held_items.map(el => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: el.item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemonWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Moves\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), pokeData.moves.map(el => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: el.move.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Game Indices\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), pokeData.game_indices.map(el => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [el.version.name, \" : \", el.game_index]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (pokemonState.loading) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (pokemonState.errorMsg !== \"\") {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: pokemonState.errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"error getting pokemon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 16\n    }, this);\n  }; // const ShowDataId = () => {\n  //     if (!_.isEmpty(pokemonState.data[pokemonName])) {\n  //         const pokeDataId = pokemonState.data[pokemonName]\n  //         return (\n  //             <input className=\"form-control modal-input\" type=\"hidden\" name=\"id_pokemon\" value={pokeDataId.id} onChange={(e) => {setIdPokemon(e.target.value)}}/>\n  //         )\n  //     }\n  //     if (pokemonState.loading) {\n  //         return <h1 className=\"loading\">Loading...</h1>\n  //     }\n  //     if (pokemonState.errorMsg !== \"\") {\n  //         return <p>{pokemonState.errorMsg}</p>\n  //     }\n  //     return <p>error getting pokemon</p>\n  // }\n\n\n  const submitNickname = () => {\n    Axios.post(\"http://localhost:3001/api/insert\", {\n      nickname: nickname,\n      name: name\n    }).then(() => {\n      alert(\"successful insert\");\n    });\n  };\n\n  const HiddenField = FormField((_temp = _class = class HiddenField extends React.Component {\n    componentDidMount() {\n      this.props.fieldApi.setValue(this.props.value);\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (nextProps.value !== this.props.value) {\n        this.props.fieldApi.setValue(nextProps.value);\n      }\n    }\n\n    render() {\n      const {\n        fieldApi,\n        ...props\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this);\n    }\n\n  }, _class.propTypes = {\n    field: propTypes.string.isRequired,\n    value: propTypes.any.isRequired,\n    fieldApi: propTypes.shape({\n      setValue: propTypes.func\n    }).isRequired\n  }, _temp));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container pokemonDetails\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: pokemonName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          onClick: () => setIsOpen(true),\n          children: \"Catch Pokemon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          open: isOpen,\n          onClose: () => setIsOpen(false),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control modal-input\",\n              type: \"text\",\n              name: \"nickname\",\n              placeholder: \"Nickname\",\n              onChange: e => {\n                setNickname(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control modal-input\",\n              type: \"hidden\",\n              name: \"name\",\n              value: pokemonName,\n              onChange: e => {\n                setName(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), HiddenField, /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              class: \"btn btn-primary modal-save\",\n              onClick: submitNickname,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), ShowData()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pokemon, \"SqGh2wPU7tBQDiEYGytHm8rRL/E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Pokemon;\nexport default Pokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"sources":["D:/React/pokemon2/client/src/containers/Pokemon.js"],"names":["React","Component","useState","useDispatch","useSelector","GetPokemon","Modal","_","Axios","Pokemon","props","pokemonName","match","params","pokemon","dispatch","pokemonState","state","isOpen","setIsOpen","name","setName","nickname","setNickname","id_pokemon","setIdPokemon","useEffect","ShowData","isEmpty","data","pokeData","sprites","front_default","back_default","types","map","el","type","abilities","ability","stats","stat","base_stat","held_items","item","moves","move","game_indices","version","game_index","loading","errorMsg","submitNickname","post","then","alert","HiddenField","FormField","componentDidMount","fieldApi","setValue","value","componentWillReceiveProps","nextProps","render","propTypes","field","string","isRequired","any","shape","func","e","target"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {GetPokemon} from '../actions/pokemonActions'\r\nimport Modal from './Modal'\r\nimport _ from 'lodash'\r\nimport Axios from 'axios'\r\n\r\nconst Pokemon = (props) => {\r\n    const pokemonName = props.match.params.pokemon\r\n    const dispatch = useDispatch()\r\n    const pokemonState = useSelector(state => state.Pokemon)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const [name, setName] = useState('')\r\n    const [nickname, setNickname] = useState('')\r\n    const [id_pokemon, setIdPokemon] = useState('')\r\n    \r\n\r\n    React.useEffect(() => {\r\n        dispatch(GetPokemon(pokemonName))\r\n    }, [])\r\n    \r\n    const ShowData = () => {\r\n        if (!_.isEmpty(pokemonState.data[pokemonName])) {\r\n            const pokeData = pokemonState.data[pokemonName]\r\n            return (\r\n                <div className=\"pokemon\">\r\n                    <div className=\"img\">\r\n                        <img src={pokeData.sprites.front_default} alt=\"\"/>\r\n                        <img src={pokeData.sprites.back_default} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"pokemonWrapper\">\r\n                        <div className=\"item\">\r\n                            <h4>Types</h4>\r\n                            {pokeData.types.map(el => {\r\n                                return <p>{el.type.name}</p>\r\n                            })}\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <h4>Abilities</h4>\r\n                            {pokeData.abilities.map(el => {\r\n                                return <p>{el.ability.name}</p>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"pokemonWrapper\">\r\n                        <div className=\"item\">\r\n                            <h4>Stats</h4>\r\n                            {pokeData.stats.map(el => {\r\n                                return <p>{el.stat.name} : {el.base_stat}</p>\r\n                            })}\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <h4>Held Items</h4>\r\n                            {pokeData.held_items.map(el => {\r\n                                return <p>{el.item.name}</p>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"pokemonWrapper\">\r\n                        <div className=\"item\">\r\n                            <h4>Moves</h4>\r\n                            {pokeData.moves.map(el => {\r\n                                return <p>{el.move.name}</p>\r\n                            })}\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <h4>Game Indices</h4>\r\n                            {pokeData.game_indices.map(el => {\r\n                                return <p>{el.version.name} : {el.game_index}</p>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (pokemonState.loading) {\r\n            return <h1 className=\"loading\">Loading...</h1>\r\n        }\r\n\r\n        if (pokemonState.errorMsg !== \"\") {\r\n            return <p>{pokemonState.errorMsg}</p>\r\n        }\r\n\r\n        return <p>error getting pokemon</p>\r\n    }\r\n\r\n    // const ShowDataId = () => {\r\n    //     if (!_.isEmpty(pokemonState.data[pokemonName])) {\r\n    //         const pokeDataId = pokemonState.data[pokemonName]\r\n    //         return (\r\n    //             <input className=\"form-control modal-input\" type=\"hidden\" name=\"id_pokemon\" value={pokeDataId.id} onChange={(e) => {setIdPokemon(e.target.value)}}/>\r\n    //         )\r\n    //     }\r\n\r\n    //     if (pokemonState.loading) {\r\n    //         return <h1 className=\"loading\">Loading...</h1>\r\n    //     }\r\n\r\n    //     if (pokemonState.errorMsg !== \"\") {\r\n    //         return <p>{pokemonState.errorMsg}</p>\r\n    //     }\r\n\r\n    //     return <p>error getting pokemon</p>\r\n    // }\r\n\r\n    const submitNickname = () => {\r\n        Axios.post(\"http://localhost:3001/api/insert\", {\r\n            nickname: nickname, \r\n            name: name, \r\n        }).then(() => {\r\n            alert(\"successful insert\")\r\n        })\r\n    }\r\n\r\n    const HiddenField = FormField(class HiddenField extends React.Component {\r\n        static propTypes = {\r\n            field: propTypes.string.isRequired,\r\n            value: propTypes.any.isRequired,\r\n            fieldApi: propTypes.shape({\r\n                setValue: propTypes.func,\r\n            }).isRequired,\r\n        }\r\n      \r\n        componentDidMount () {\r\n            this.props.fieldApi.setValue(this.props.value)\r\n        }\r\n      \r\n        componentWillReceiveProps (nextProps) {\r\n            if (nextProps.value !== this.props.value) {\r\n                this.props.fieldApi.setValue(nextProps.value)\r\n            }\r\n        }\r\n      \r\n        render () {\r\n          const { fieldApi, ...props } = this.props\r\n      \r\n          return (\r\n            <input type='hidden' { ...props } />\r\n          )\r\n        }\r\n      })\r\n\r\n    return (\r\n        <div className=\"container pokemonDetails\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h2>{pokemonName}</h2>\r\n                    <button className=\"btn btn-warning\" onClick={() => setIsOpen(true)}>Catch Pokemon</button>\r\n                    <Modal open={isOpen} onClose={() => setIsOpen(false)}>\r\n                        <div>\r\n                            <input className=\"form-control modal-input\" type=\"text\" name=\"nickname\" placeholder=\"Nickname\" onChange={(e) => {setNickname(e.target.value)}}/>\r\n\r\n                            <input className=\"form-control modal-input\" type=\"hidden\" name=\"name\" value={pokemonName} onChange={(e) => {setName(e.target.value)}}/>\r\n\r\n                            {HiddenField}\r\n                            \r\n                            <button type=\"submit\" class=\"btn btn-primary modal-save\" onClick={submitNickname}>Save</button>\r\n                        </div>\r\n                    </Modal>\r\n                    {ShowData()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pokemon"]},"metadata":{},"sourceType":"module"}