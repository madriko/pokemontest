{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\React\\\\pokemon2\\\\client\\\\src\\\\containers\\\\Pokemon.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetPokemon } from '../actions/pokemonActions';\nimport Modal from './Modal';\nimport _ from 'lodash';\nimport Axios from 'axios';\n\nconst Pokemon = props => {\n  _s();\n\n  const pokemonName = props.match.params.pokemon;\n  const dispatch = useDispatch();\n  const pokemonState = useSelector(state => state.Pokemon);\n  const [pokemonList, setPokemonList] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpen2, setIsOpen2] = useState(false);\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [count, setCount] = useState(0);\n  const [nicknameStatus, setNicknameStatus] = useState(\"\");\n  React.useEffect(() => {\n    dispatch(GetPokemon(pokemonName));\n  }, []);\n\n  const ShowData = () => {\n    if (!_.isEmpty(pokemonState.data[pokemonName])) {\n      const pokeData = pokemonState.data[pokemonName];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemon\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: pokeData.sprites.front_default,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pokeData.sprites.back_default,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemonWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), pokeData.types.map(el => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: el.type.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Abilities\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), pokeData.abilities.map(el => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: el.ability.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemonWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Stats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), pokeData.stats.map(el => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [el.stat.name, \" : \", el.base_stat]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Held Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), pokeData.held_items.map(el => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: el.item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemonWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Moves\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), pokeData.moves.map(el => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: el.move.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Game Indices\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), pokeData.game_indices.map(el => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [el.version.name, \" : \", el.game_index]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 40\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (pokemonState.loading) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (pokemonState.errorMsg !== \"\") {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: pokemonState.errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"error getting pokemon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 16\n    }, this);\n  };\n\n  const onSubmit = data => {\n    Axios.post(\"http://localhost:3001/api/insert\", {\n      nickname: data.nickname,\n      id_pokemon: data.id_pokemon,\n      name: data.name,\n      qty: data.qty\n    }).then(response => {\n      if (response.data.message) {\n        setNicknameStatus(response.data.message);\n      }\n    });\n  };\n\n  const addPokemonQty = pokemon => {\n    Axios.get(`http://localhost:3001/api/get/${pokemon}`).then(response => {\n      setPokemonList(response.data);\n    });\n  };\n\n  const ShowClick = () => {\n    return count;\n  };\n\n  const ShowDataQty = () => {\n    return pokemonList.map(val => {\n      if (val.name === pokemonName) {\n        return val.qty + 1;\n      }\n    });\n  };\n\n  const ShowDataId = () => {\n    return pokemonList.map(val => {\n      if (val.name === pokemonName) {\n        return val.id;\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container pokemonDetails\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: pokemonName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-warning\",\n          onClick: ShowClick() % 2 === 1 ? () => [setIsOpen(true), addPokemonQty(pokemonName), setIsOpen2(false), setCount(count + 1)] : () => [setIsOpen(false), setIsOpen2(true), setCount(count + 1)],\n          children: \"Catch Pokemon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), ShowClick() % 2 === 1 ? /*#__PURE__*/_jsxDEV(Modal, {\n          open: isOpen2,\n          onClose: () => setIsOpen2(false),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Failed to Catch a Pokemon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Modal, {\n          open: isOpen,\n          onClose: () => [setIsOpen(false), setNicknameStatus(\"\")],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit(onSubmit),\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control modal-input\",\n                type: \"text\",\n                name: \"nickname\",\n                placeholder: \"Nickname\",\n                ref: register\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"nicknameStatus\",\n                children: nicknameStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"hidden\",\n                name: \"id_pokemon\",\n                defaultValue: ShowDataId(),\n                ref: register\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"hidden\",\n                name: \"name\",\n                defaultValue: pokemonName,\n                ref: register\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"hidden\",\n                name: \"qty\",\n                defaultValue: ShowDataQty(),\n                ref: register\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                class: \"btn btn-primary modal-save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this), ShowData()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pokemon, \"bIVfsQnWr4fXjoJrhTn0FVjMkZc=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c = Pokemon;\nexport default Pokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"sources":["D:/React/pokemon2/client/src/containers/Pokemon.js"],"names":["React","useState","useForm","useDispatch","useSelector","GetPokemon","Modal","_","Axios","Pokemon","props","pokemonName","match","params","pokemon","dispatch","pokemonState","state","pokemonList","setPokemonList","isOpen","setIsOpen","isOpen2","setIsOpen2","register","handleSubmit","count","setCount","nicknameStatus","setNicknameStatus","useEffect","ShowData","isEmpty","data","pokeData","sprites","front_default","back_default","types","map","el","type","name","abilities","ability","stats","stat","base_stat","held_items","item","moves","move","game_indices","version","game_index","loading","errorMsg","onSubmit","post","nickname","id_pokemon","qty","then","response","message","addPokemonQty","get","ShowClick","ShowDataQty","val","ShowDataId","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {GetPokemon} from '../actions/pokemonActions';\r\nimport Modal from './Modal';\r\nimport _ from 'lodash';\r\nimport Axios from 'axios';\r\n\r\nconst Pokemon = (props) => {\r\n    const pokemonName = props.match.params.pokemon;\r\n    const dispatch = useDispatch();\r\n    const pokemonState = useSelector(state => state.Pokemon);\r\n    const [pokemonList, setPokemonList] = useState([]);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isOpen2, setIsOpen2] = useState(false);\r\n    const { register, handleSubmit } = useForm();\r\n    const [count, setCount] = useState(0);\r\n    const [nicknameStatus, setNicknameStatus] = useState(\"\");\r\n\r\n    React.useEffect(() => {\r\n        dispatch(GetPokemon(pokemonName))\r\n    }, []);\r\n\r\n\r\n    \r\n    const ShowData = () => {\r\n        if (!_.isEmpty(pokemonState.data[pokemonName])) {\r\n            const pokeData = pokemonState.data[pokemonName]\r\n            return (\r\n                <div className=\"pokemon\">\r\n                    <div className=\"img\">\r\n                        <img src={pokeData.sprites.front_default} alt=\"\"/>\r\n                        <img src={pokeData.sprites.back_default} alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"pokemonWrapper\">\r\n                        <div className=\"item\">\r\n                            <h4>Types</h4>\r\n                            {pokeData.types.map(el => {\r\n                                return <p>{el.type.name}</p>\r\n                            })}\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <h4>Abilities</h4>\r\n                            {pokeData.abilities.map(el => {\r\n                                return <p>{el.ability.name}</p>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"pokemonWrapper\">\r\n                        <div className=\"item\">\r\n                            <h4>Stats</h4>\r\n                            {pokeData.stats.map(el => {\r\n                                return <p>{el.stat.name} : {el.base_stat}</p>\r\n                            })}\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <h4>Held Items</h4>\r\n                            {pokeData.held_items.map(el => {\r\n                                return <p>{el.item.name}</p>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"pokemonWrapper\">\r\n                        <div className=\"item\">\r\n                            <h4>Moves</h4>\r\n                            {pokeData.moves.map(el => {\r\n                                return <p>{el.move.name}</p>\r\n                            })}\r\n                        </div>\r\n                        <div className=\"item\">\r\n                            <h4>Game Indices</h4>\r\n                            {pokeData.game_indices.map(el => {\r\n                                return <p>{el.version.name} : {el.game_index}</p>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (pokemonState.loading) {\r\n            return <h1 className=\"loading\">Loading...</h1>\r\n        }\r\n\r\n        if (pokemonState.errorMsg !== \"\") {\r\n            return <p>{pokemonState.errorMsg}</p>\r\n        }\r\n\r\n        return <p>error getting pokemon</p>\r\n    };\r\n    \r\n    const onSubmit = data => {\r\n        Axios.post(\"http://localhost:3001/api/insert\", {\r\n            nickname: data.nickname, \r\n            id_pokemon: data.id_pokemon,\r\n            name: data.name,\r\n            qty: data.qty, \r\n        }).then((response) => {\r\n            if (response.data.message) {\r\n                setNicknameStatus(response.data.message)\r\n            } \r\n        });\r\n    };\r\n\r\n    const addPokemonQty = (pokemon) => {\r\n        Axios.get(`http://localhost:3001/api/get/${pokemon}`).then((response) => {\r\n            setPokemonList(response.data)\r\n        });\r\n    };\r\n\r\n    const ShowClick = () => {\r\n        return count;\r\n    };\r\n\r\n    const ShowDataQty = () => {\r\n        return (\r\n            pokemonList.map((val) => {\r\n                if (val.name === pokemonName) {\r\n                    return val.qty + 1;\r\n                }\r\n            })\r\n        )\r\n    };\r\n\r\n    const ShowDataId = () => {\r\n        return (\r\n            pokemonList.map((val) => {\r\n                if (val.name === pokemonName) {\r\n                    return val.id;\r\n                }\r\n            })\r\n        )\r\n    };\r\n\r\n    return (\r\n        <div className=\"container pokemonDetails\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h2>{pokemonName}</h2>\r\n\r\n                    <button \r\n                        className=\"btn btn-sm btn-warning\" \r\n                        onClick={((ShowClick() % 2) === 1) ? () => [setIsOpen(true), addPokemonQty(pokemonName), setIsOpen2(false), setCount(count + 1)] : () => [setIsOpen(false), setIsOpen2(true), setCount(count + 1)]}>\r\n                            Catch Pokemon\r\n                    </button>\r\n\r\n                    {((ShowClick() % 2) === 1) ? \r\n                    \r\n                        <Modal open={isOpen2} onClose={() => setIsOpen2(false)}>\r\n                            <p>Failed to Catch a Pokemon</p>\r\n                        </Modal>\r\n                    \r\n                    :   <Modal open={isOpen} onClose={() => [setIsOpen(false), setNicknameStatus(\"\")]}>\r\n                            <div>\r\n                                <form onSubmit={handleSubmit(onSubmit)}>\r\n                                    <p>Success</p>\r\n                                    <input className=\"form-control modal-input\" type=\"text\" name=\"nickname\" placeholder=\"Nickname\" ref={register} />\r\n\r\n                                    <p className=\"nicknameStatus\">{nicknameStatus}</p>\r\n\r\n                                    <input type=\"hidden\" name=\"id_pokemon\" defaultValue={ShowDataId()} ref={register} />\r\n\r\n                                    <input type=\"hidden\" name=\"name\" defaultValue={pokemonName} ref={register} />\r\n\r\n                                    <input type=\"hidden\" name=\"qty\" defaultValue={ShowDataQty()} ref={register} />\r\n                                    \r\n                                    <input type=\"submit\" class=\"btn btn-primary modal-save\" />\r\n                                </form>\r\n                                \r\n                            </div>\r\n                        </Modal> \r\n                    }\r\n                    \r\n                    {ShowData()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pokemon;"]},"metadata":{},"sourceType":"module"}