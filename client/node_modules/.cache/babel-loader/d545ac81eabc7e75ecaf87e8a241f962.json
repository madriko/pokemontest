{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\React\\\\pokemon2\\\\client\\\\src\\\\containers\\\\MyPokemonList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetPokemon } from '../actions/pokemonActions';\nimport Axios from 'axios';\nimport { useForm } from 'react-hook-form';\nimport ModalRemove from './Modal';\nimport PokemonList from './PokemonList';\nexport default function MyPokemonList(props) {\n  _s();\n\n  const [myPokemonList, setMyPokemonList] = useState([]);\n  const pokemonName = props.match.params.pokemon;\n  const dispatch = useDispatch();\n  const pokemonState = useSelector(state => state.Pokemon);\n  const [pokemonList, setPokemonList] = useState([]);\n  const [allPokemon, setPokemon] = useState([]);\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const [isOpen3, setIsOpen3] = useState(false);\n  React.useEffect(() => {\n    dispatch(GetPokemon(pokemonName));\n  }, []);\n  useEffect(() => {\n    Axios.get('http://localhost:3001/api/getmypokemon').then(response => {\n      setMyPokemonList(response.data);\n    });\n  }, []);\n\n  const addPokemonQty = pokemon => {\n    Axios.get(`http://localhost:3001/api/get/${pokemon}`).then(response => {\n      setPokemonList(response.data);\n    });\n  };\n\n  const getAllPokemon = pokemon => {\n    Axios.get(`http://localhost:3001/api/get/${pokemon}`).then(response => {\n      setPokemon(response.data);\n    });\n  };\n\n  const deletePokemon = pokemon => {\n    // Axios.delete(`http://localhost:3001/api/delete/${pokemon}`, {\n    //     name: ShowDataName(),\n    //     qty: ShowDataQty()\n    // }).then(() => {\n    //     alert(\"successful delete\")\n    // })\n    console.log(ShowDataName());\n  };\n\n  const ShowDataQty = () => {\n    return pokemonList.map(val => {\n      if (val.name === pokemonName) {\n        return val.qty - 1;\n      }\n    });\n  };\n\n  const ShowDataName = pokemon => {\n    pokemonList.map(val => {\n      if (val.name === pokemon) {\n        return val.name;\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: myPokemonList.map(val => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Name : \", val.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Nickname : \", val.nickname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"hidden\",\n            name: \"qty\",\n            defaultValue: ShowDataQty(),\n            ref: register\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-sm btn-danger\",\n            onClick: () => [deletePokemon(val.nickname), addPokemonQty(val.name), ShowDataName(val.name)],\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyPokemonList, \"k4cPpywM+xzk4JH+AVl+aEjDq3w=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c = MyPokemonList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPokemonList\");","map":{"version":3,"sources":["D:/React/pokemon2/client/src/containers/MyPokemonList.js"],"names":["React","useState","useEffect","useDispatch","useSelector","GetPokemon","Axios","useForm","ModalRemove","PokemonList","MyPokemonList","props","myPokemonList","setMyPokemonList","pokemonName","match","params","pokemon","dispatch","pokemonState","state","Pokemon","pokemonList","setPokemonList","allPokemon","setPokemon","register","handleSubmit","isOpen3","setIsOpen3","get","then","response","data","addPokemonQty","getAllPokemon","deletePokemon","console","log","ShowDataName","ShowDataQty","map","val","name","qty","nickname"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {GetPokemon} from '../actions/pokemonActions'\r\nimport Axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport ModalRemove from './Modal'\r\nimport PokemonList from './PokemonList'\r\n\r\nexport default function MyPokemonList(props) {\r\n    const [myPokemonList, setMyPokemonList] = useState([])\r\n    const pokemonName = props.match.params.pokemon\r\n    const dispatch = useDispatch()\r\n    const pokemonState = useSelector(state => state.Pokemon)\r\n    const [pokemonList, setPokemonList] = useState([])\r\n    const [allPokemon, setPokemon] = useState([])\r\n    const { register, handleSubmit } = useForm()\r\n    const [isOpen3, setIsOpen3] = useState(false)\r\n\r\n    React.useEffect(() => {\r\n        dispatch(GetPokemon(pokemonName))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:3001/api/getmypokemon').then((response) => {\r\n            setMyPokemonList(response.data)\r\n        })\r\n    }, [])\r\n\r\n    const addPokemonQty = (pokemon) => {\r\n        Axios.get(`http://localhost:3001/api/get/${pokemon}`).then((response) => {\r\n            setPokemonList(response.data)\r\n        })\r\n    }\r\n\r\n    const getAllPokemon = (pokemon) => {\r\n        Axios.get(`http://localhost:3001/api/get/${pokemon}`).then((response) => {\r\n            setPokemon(response.data)\r\n        })\r\n    }\r\n\r\n    const deletePokemon = (pokemon) => {\r\n        // Axios.delete(`http://localhost:3001/api/delete/${pokemon}`, {\r\n        //     name: ShowDataName(),\r\n        //     qty: ShowDataQty()\r\n        // }).then(() => {\r\n        //     alert(\"successful delete\")\r\n        // })\r\n\r\n        console.log(ShowDataName())\r\n    }\r\n\r\n    const ShowDataQty = () => {\r\n        return (\r\n            pokemonList.map((val) => {\r\n                if (val.name === pokemonName) {\r\n                    return val.qty - 1\r\n                }\r\n            })\r\n        )\r\n    }\r\n\r\n    const ShowDataName = (pokemon) => {\r\n        pokemonList.map((val) => {\r\n            if (val.name === pokemon) {\r\n                return val.name\r\n            }\r\n        })\r\n    }\r\n        \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {myPokemonList.map((val) => {\r\n                return (\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <p>Name : {val.name}</p>\r\n                            <p>Nickname : {val.nickname}</p>\r\n\r\n                            <input type=\"hidden\" name=\"qty\" defaultValue={ShowDataQty()} ref={register} />\r\n\r\n                            <button className=\"btn btn-sm btn-danger\" onClick={() => [deletePokemon(val.nickname), addPokemonQty(val.name), ShowDataName(val.name)]}>Remove</button>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}